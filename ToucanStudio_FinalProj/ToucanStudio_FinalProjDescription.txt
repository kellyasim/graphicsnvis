Dungeon Crawler

Our initial game project was going to be a dungeon crawler game. The player was going to be able to move throughout different room, collect items, possibly solve small puzzles, etc. However, it ended up being too much work for the amount of time we had so instead we just coded out a combat system. We implemented movement, health, damage, lives, and enemies. For our final project we are going to make the original dungeon crawler we had imagined. 


To be Updated:
- Keyboard interactivity. The project must support keystrokes, which trigger some interesting functionality.
> Need to make interactivity smoother and allow for multiple keys to be pressed, maybe add another set of move keys (arrow keys)
- Multiple GUI systems. The project must have at least two GUI systems. This could be a "main menu" screen with buttons and display information, and at least one other screen that includes buttons and display information.
> Already have the pause screen and heads-up display, will need to update with new controls, add buttons, and main menu?
- Class objects with animation hierarchies. The project must include objects with at least two levels of animation hierarchy (similar to what you created in Assignment 4).
> Whole new set of sprites and animations

To be Added:
- Data input/output. This can be data from a data set, user-created data to provide settings (e.g. a map-builder that generates a level map based on a XML or text file), or data saved from the application (e.g. high scores).
>The user will be able to create a save state in order to save their progress. Need alternate menu screens to reflect the possibility of loading a previously saved file
- Sound. The project must include some use of sound, but this sound should be mutable (toggled by the user with either a keystroke or GUI button).
	> background music


Abel - working on updating existing code to update features, adding xbox controller support 
Kelly - Save state, sprites, sound
Bongani - multiple rooms, items, level design
